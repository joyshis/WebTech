const express = require('express');
const bodyParser = require('body-parser');
const app = express();
const PORT = 3000;

// Middleware
app.use(bodyParser.json());

// Dummy data for books
let books = [
  { id: 1, title: '1984', author: 'George Orwell', genre: 'Dystopian' },
  { id: 2, title: 'The Great Gatsby', author: 'F. Scott Fitzgerald', genre: 'Classic' },
  { id: 3, title: 'Moby Dick', author: 'Herman Melville', genre: 'Adventure' }
];

// GET all books
app.get('/api/books', (req, res) => {
  res.json(books);
});

// GET book by ID
app.get('/api/books/:id', (req, res) => {
  const book = books.find(b => b.id === parseInt(req.params.id));
  if (book) {
    res.json(book);
  } else {
    res.status(404).send('Book not found');
  }
});

// POST a new book
app.post('/api/books', (req, res) => {
  const { title, author, genre } = req.body;
  const newBook = {
    id: books.length + 1,
    title,
    author,
    genre
  };
  books.push(newBook);
  res.status(201).json(newBook);
});

// PUT update book details
app.put('/api/books/:id', (req, res) => {
  const { title, author, genre } = req.body;
  const bookIndex = books.findIndex(b => b.id === parseInt(req.params.id));
  if (bookIndex !== -1) {
    books[bookIndex] = { id: parseInt(req.params.id), title, author, genre };
    res.json(books[bookIndex]);
  } else {
    res.status(404).send('Book not found');
  }
});

// DELETE a book
app.delete('/api/books/:id', (req, res) => {
  const bookIndex = books.findIndex(b => b.id === parseInt(req.params.id));
  if (bookIndex !== -1) {
    books.splice(bookIndex, 1);
    res.status(204).send();
  } else {
    res.status(404).send('Book not found');
  }
});

app.listen(PORT, () => {
  console.log(`Server running on http://localhost:${PORT}`);
});
