server.js:
const express = require('express');
const dotenv = require('dotenv');
const cors = require('cors');
const connectDB = require('./config/db');

dotenv.config();
connectDB();

const app = express();
app.use(express.json());
app.use(cors());

app.use('/employees', require('./routes/employeeRoutes'));

const PORT = process.env.PORT || 5000;
app.listen(PORT, () => console.log(Server running on port ${PORT}));



employeeRoutes.js:
const express = require('express');
const { getEmployees, getEmployeeById, addEmployee, updateEmployee, deleteEmployee } = require('../controllers/employeeController');

const router = express.Router();

router.get('/', getEmployees);
router.get('/:id', getEmployeeById);
router.post('/', addEmployee);
router.put('/:id', updateEmployee);
router.delete('/:id', deleteEmployee);

module.exports = router;



employeeService.js:
import axios from 'axios';

const API_URL = 'http://localhost:5000/employees';

export const getEmployees = async () => {
    const response = await axios.get(API_URL);
    return response.data;
};

export const addEmployee = async (employee) => {
    const response = await axios.post(API_URL, employee);
    return response.data;
};

export const updateEmployee = async (id, employee) => {
    const response = await axios.put(${API_URL}/${id}, employee);
    return response.data;
};
export const deleteEmployee = async (id) => {
    const response = await axios.delete(${API_URL}/${id});
    return response.data;
};
